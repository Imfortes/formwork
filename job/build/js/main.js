"use strict";var ready=function(e){"loading"!=document.readyState?e():document.addEventListener("DOMContentLoaded",e)};function nextStep(e){for(var t=0,n=(document.getElementsByClassName("#myTab a"),document.getElementsByClassName("#myTab a"),document.getElementsByClassName("pane-for-step")),a=document.getElementsByClassName("pane-for-step > div"),o=0;o<n.length;o++)console.log(n[t+e]);var c=[].slice.call(n);console.log([].slice.call(n)),console.log([].slice.call(a)),c.map((function(e,t){var n=t;e.classList.contains("active")&&(console.log("item",e),e+=1),document.querySelector("#nextStepRegister").addEventListener("click",(function(e){e.preventDefault(),validateForm(),n+=1,console.log("currentTab",n)}))})),t+=e}function isCheck(e){return document.querySelector('input[name="'+e+'"]:checked')}ready((function(){validateForm(),isCheck("reg"),isCheck("payType")}));
"use strict";
"use strict";function tabs(){var t=[].slice.call(document.querySelectorAll("#myTab a"));t.forEach((function(e){var o=new bootstrap.Tab(e);t[0].style.backgroundColor="#6db744",t[0].style.color="#ffffff",e.addEventListener("click",(function(t){t.preventDefault(),o.show()}))}))}
"use strict";function switchFieldset(t,e){$("fieldset."+t).css("display","none"),$(".nav .active").toggleClass("active"),$(".nav #"+e).add("active"),$("fieldset."+e).css("display","flex !important"),console.log("fieldset."+t),console.log("fieldset."+e),console.log(".nav #"+e),console.log(".nav-link"),console.log(".nav .active"),console.log("fieldset."+e)}$(".nav-item").click((function(){var t=$(".nav .active").attr("id");console.log(t),switchFieldset(t,this.id)})),$("button.next").click((function(){switchFieldset($(this).parent().parent().attr("data-fieldName"),$(this).parent().parent().next().attr("data-fieldName"))}));
"use strict";function validateForm(){var e=new RegExp("^([А-Я]{1}[а-яё]{1,23}|[A-Z]{1}[a-z]{1,23})$"),t=new RegExp("(?:\\+|\\d)[\\d\\-\\(\\) ]{9,}\\d"),u=new RegExp("/[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}/igm "),n=new RegExp("#^[0-9]+$#");new RegExp;e.test(document.querySelector("#edit-title").value),t.test(document.querySelector("#edit-user-phone").value),u.test(document.querySelector("#edit-user-email").value),n.test(document.querySelector("#edit-money").value)}
"use strict";function validVacancyTitle(){var i=new RegExp("/^[a-zA-Zа-яА-Я'][a-zA-Zа-яА-Я-' ]+[a-zA-Zа-яА-Я']?$/u"),t=document.querySelector("#edit-title"),e=i.test(t);t.addEventListener("oninput",(function(){e?t.classList.remove("is-invalid"):t.classList.add("is-invalid")}))}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
